NOTE: "> redirects an output file-descriptor, < an input file-descriptor"

PREAMBLE

As this is a rush, you will not find any indication in the e-learning. Your friends are always the same (i.e. your neighbours on the left, on the right, or vice versa, man, google, etc...). It is up to you to find out over these 2 days how to do what is required. Be careful, there are several levels of complexity. Many phenomena occur when certain errors occur. You will have to manage them in accordance with the system's reactions.

SUBJECT - Objectives

Your objective is to realize the pipex program. This program works as follows:
./pipex file1 cmd1 cmd2 file2
	- file1 and file2 are file names.
	- cmd1 and cmd2 are shell commands with their parameters.
Running the pipex program has the same effect as the following shell command:
< file1 cmd1 | cmd2 > file2
Your objective is to achieve the same mechanism that is set up by the shell (we don't want to see any intermediate or cutting steps, everything must work at once).
EXAMPLES:
1.) ./pipex infile ``ls -l'' ``wc -l'' outfile
will perform the same as "< infile ls -l | wc -l > outfile" in sh
2.) ./pipex infile ``grep a1'' ``wc -w'' outfile
will perform the same as "< infile grep a1 | wc -w > outfile" in sh

SUBJECT - Details

Classic rendering on the git, classic Makefile, and of course, only the content of your repository will be used for defense. An author file is to be returned to the root of your repository. It will be completed according to the usual instructions.
Only malloc, free, and all system calls of the libc are allowed. NOT ANYMORE functions of the libc.
